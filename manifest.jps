type: install
version: 1.5
id: minio
name: Minio Cluster
homepage: https://github.com/jelastic-jps/minio
baseUrl: https://raw.githubusercontent.com/jelastic-jps/minio/master
logo: images/minio-logo-70x70.png

categories: [ apps/file-manager ]
description:
  text: |
    Minio is an object storage server, compatible with Amazon S3 cloud storage
    service, best suited for storing unstructured data such as photos, videos, log
    files and backups.
  short: |
    Automated clusterization for a reliable and cost-effective Minio storage
    to keep your unstructured data in a cloud.

globals:
  accessKey: ${fn.password}
  secretKey: ${fn.password}
  port: 80
  consolePort: 4949
  exportPath: /export
  DEPLOY_HOOK: /root/deployLE.sh
  UNDEPLOY_HOOK: /root/undeployLE.sh
  DEPLOY_HOOK_JS: ${baseUrl}/scripts/deployHook.js
  
onBeforeInit: |
  var settings = jps.settings;
  var fields = settings.fields;
  if ("${quota.environment.externalip.enabled}" == 0) { 
    settings.fields = fields.filter(function(item) { return item.name != "le-addon" }); 
  }
  return { result: 0, settings: settings };
  
settings:
  fields:
    - name: nodes
      caption: Number of nodes
      type: list
      inputType: string
      values:
        1: 1 node
        4: 4 nodes
        8: 8 nodes
        16: 16 nodes
      default: 4
      required: true
    - type: checkbox
      name: le-addon
      caption: Install Let's Encrypt Certificates and Custom Domains Addon. Public IP is required.
      value: false 
         
nodes:
  count: ${settings.nodes}
  cloudlets: 16
  nodeGroup: cp
  image: jelastic/minio:RELEASE.2023-02-27T18-10-45Z
  password: ${globals.secretKey}
  skipNodeEmails: true
  validation:
      maxCount: ${settings.nodes}
      minCount: ${settings.nodes}

onAfterChangeTopology:
  - if (${event.response.response.env.sslstate}):
      cmd[cp]: iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 4949
  - else:
      cmd[cp]: iptables -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 4949

onInstall:
  - cmd[cp]: |-
      jem passwd set -p ${globals.secretKey} -u ${globals.accessKey}
      jem service stop
      rm -rf /${globals.exportPath}/.minio.sys
    user: root
  - cmd[cp]: |-
      echo "MINIO_SERVER_URL=${env.protocol}://${env.domain}" >> /etc/default/minio
      echo "MINIO_BROWSER_REDIRECT_URL=${env.protocol}://${env.domain}:4949" >> /etc/default/minio
  - build-cluster
  - if (!${settings.le-addon:false}):
    - installAddon:
        id: letsencrypt-ssl-addon
        nodeGroup: cp
  - if (${settings.le-addon:false}): 
      - install-LE:
          skipEnvs: true
      - setGlobals:
          PROTOCOL: https
  - restartContainers [cp]

actions:
  build-cluster:
    script: build-cluster.js
    params:
      nodeGroup: cp
      volumePath: ${globals.exportPath}
      port: ${globals.port}
      consolePort: ${globals.consolePort}
    
  install-LE:
    - cmd[cp]: |-
        printf '#!/bin/bash
        mkdir -p /export/.minio/certs/
        cp /var/lib/jelastic/keys/privkey.pem /export/.minio/certs/private.key
        cp /var/lib/jelastic/keys/fullchain.pem /export/.minio/certs/public.crt
        sed -i "s|MINIO_SERVER_URL=http://|MINIO_SERVER_URL=https://|g" /etc/default/minio
        sed -i "s|MINIO_BROWSER_REDIRECT_URL=http://|MINIO_BROWSER_REDIRECT_URL=https://|g" /etc/default/minio
        sed -i "s|MINIO_OPTS=.*|MINIO_OPTS=\\" --address :443 --console-address :4949 --certs-dir /export/.minio/certs\\"|g" /etc/default/minio
        service minio restart' > ${globals.DEPLOY_HOOK}
        
        printf '#!/bin/bash
        sed -i "s|MINIO_SERVER_URL=https://|MINIO_SERVER_URL=http://|g" /etc/default/minio
        sed -i "s|MINIO_BROWSER_REDIRECT_URL=https://|MINIO_BROWSER_REDIRECT_URL=http://|g" /etc/default/minio
        sed -i "s|MINIO_OPTS=.*|MINIO_OPTS=\\" --address :80 --console-address :4949\\"|g" /etc/default/minio
        service minio restart' > ${globals.UNDEPLOY_HOOK}
    - install:
      jps: https://raw.githubusercontent.com/jelastic-jps/lets-encrypt/master/manifest.jps?_r=${fn.random}
      nodeGroup: cp
      settings:
        deployHook: ${globals.DEPLOY_HOOK_JS}
        deployHookType: js
        undeployHook: ${globals.DEPLOY_HOOK_JS}
        undeployHookType: js
        customDomains: ${env.domain}

addons:
  - id: letsencrypt-ssl-addon
    name: Let's Encrypt + Custom Domains
    description: Press "Install" button to initiate installation procedure 
    globals: 
      HTTPS_PORT: 443
    buttons:
      - caption: Install 
        action: install-LE
        loadingText: Installing...
        confirmText: Do you want to install Let's Encrypt addon?
        successText: Let's Encrypt addon has been successfully installed!

success:
  text: /text/success.md
  email: /text/success.md
